"use strict";(self.webpackChunkkaito_website=self.webpackChunkkaito_website||[]).push([[1099],{24928:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"custom-model","title":"Custom Model Integration","description":"Using the KAITO base image","source":"@site/docs/custom-model.md","sourceDirName":".","slug":"/custom-model","permalink":"/kaito/docs/next/custom-model","draft":false,"unlisted":false,"editUrl":"https://github.com/kaito-project/kaito/tree/main/website/docs/custom-model.md","tags":[],"version":"current","frontMatter":{"title":"Custom Model Integration"},"sidebar":"sidebar","previous":{"title":"RAGEngine Chat Completion Algorithm","permalink":"/kaito/docs/next/rag-chat-completions-wrapper"},"next":{"title":"Tool Calling","permalink":"/kaito/docs/next/tool-calling"}}');var o=n(74848),s=n(28453);const r={title:"Custom Model Integration"},a=void 0,l={},c=[{value:"Using the KAITO base image",id:"using-the-kaito-base-image",level:2},{value:"Limitations",id:"limitations",level:2}];function d(e){const t={a:"a",h2:"h2",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"using-the-kaito-base-image",children:"Using the KAITO base image"}),"\n",(0,o.jsxs)(t.p,{children:["The KAITO base image includes both HuggingFace and vLLM runtime libraries along with corresponding FastAPI server scripts. This provides a convenient way to run ",(0,o.jsx)(t.strong,{children:"any"})," HuggingFace model using the ",(0,o.jsx)(t.strong,{children:"HuggingFace"})," runtime."]}),"\n",(0,o.jsx)(t.p,{children:"Note that the vLLM runtime is not supported for arbitrary custom model deployment."}),"\n",(0,o.jsxs)(t.p,{children:["Here is a ",(0,o.jsx)(t.strong,{children:(0,o.jsx)(t.a,{href:"https://github.com/kaito-project/kaito/tree/main/examples/custom-model-integration/custom-model-deployment.yaml",children:"sample deployment YAML"})}),". To use it:"]}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsx)(t.li,{children:"Specify the HuggingFace model ID in the container command."}),"\n",(0,o.jsx)(t.li,{children:"For models that require a HuggingFace token to download, users need to add the token to the specified secret."}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"The script downloads model weights during server bootstrap, eliminating the need to pre-bake them into the container image."}),"\n",(0,o.jsx)(t.h2,{id:"limitations",children:"Limitations"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Hugging Face runtime only"}),": Only HuggingFace runtime is supported for custom models. Inference performance may be slower compared to vLLM runtime if the model supports both."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"No multi-node inference"}),": Distributed inference across multiple nodes is not supported for custom model."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"No autoscaling"}),": KAITO autoscaling relies on metrics exposed by vLLM runtime, they are unavailable in HuggingFace runtime."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"No presets"}),": Users must manually modify the command line in the pod template for parameter changes."]}),"\n"]})]})}function m(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var i=n(96540);const o={},s=i.createContext(o);function r(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);